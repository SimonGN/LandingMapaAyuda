{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { CardExperienceStyle } from \"./CardExperienceStyle\";\nimport ParagraphBody from \"../../styles/fontsStyles/paragraphBody\";\nimport Button from \"../Button/Button\";\nimport cardExperience from \"../../content/card.json\";\nimport { i18n, withTranslation } from '../../i18n';\n\nvar changeLanguage = function changeLanguage(language, setLangauge) {\n  i18n.changeLanguage(language);\n  setLangauge(language);\n};\n\nvar CardExperience = function CardExperience(props) {\n  var t = props.t;\n\n  var _useState = useState(i18n.language),\n      _useState2 = _slicedToArray(_useState, 2),\n      language = _useState2[0],\n      setLangauge = _useState2[1];\n\n  var card = function card() {\n    return cardExperience.map(function (member, i) {\n      var description = member.description,\n          conutry = member.conutry,\n          img = member.img;\n      return React.createElement(\"div\", {\n        className: \"cardStyle\"\n      }, React.createElement(\"div\", {\n        className: \"card-experience\",\n        key: i\n      }, React.createElement(\"div\", {\n        className: \"img\"\n      }, React.createElement(\"div\", {\n        className: \"imgFondo\"\n      }), React.createElement(\"div\", {\n        className: \"imgPeople\"\n      })), React.createElement(\"div\", {\n        className: \"text\"\n      }, React.createElement(ParagraphBody, {\n        color: \"#999999\"\n      }, conutry), React.createElement(ParagraphBody, null, description))), React.createElement(\"div\", {\n        className: \"button\"\n      }, t(\"button1\")));\n    });\n  };\n\n  return React.createElement(CardExperienceStyle, null, card(), React.createElement(Button, {\n    content: t(\"button1\"),\n    color: \"#F1A409\",\n    backgroundColor: \"#FCEDCE\",\n    size: \"14px\"\n  }));\n};\n\nexport default withTranslation(\"home\")(CardExperience);","map":{"version":3,"sources":["/Users/simongnegrete/Desktop/Tailor/MapaAyuda/components/CardExperience/CardExperience.js"],"names":["React","useState","Link","CardExperienceStyle","ParagraphBody","Button","cardExperience","i18n","withTranslation","changeLanguage","language","setLangauge","CardExperience","props","t","card","map","member","i","description","conutry","img"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AAEA,SAASC,IAAT,EAAeC,eAAf,QAAsC,YAAtC;;AAIA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,WAAX,EAA2B;AAC9CJ,EAAAA,IAAI,CAACE,cAAL,CAAoBC,QAApB;AACAC,EAAAA,WAAW,CAACD,QAAD,CAAX;AACH,CAHD;;AAIA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,KAAK,EAAI;AAAA,MACpBC,CADoB,GACdD,KADc,CACpBC,CADoB;;AAAA,kBAEIb,QAAQ,CAACM,IAAI,CAACG,QAAN,CAFZ;AAAA;AAAA,MAErBA,QAFqB;AAAA,MAEXC,WAFW;;AAG5B,MAAMI,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,WACIT,cAAc,CAACU,GAAf,CAAmB,UAACC,MAAD,EAASC,CAAT,EAAe;AAAA,UACtBC,WADsB,GACQF,MADR,CACtBE,WADsB;AAAA,UACTC,OADS,GACQH,MADR,CACTG,OADS;AAAA,UACAC,GADA,GACQJ,MADR,CACAI,GADA;AAE9B,aACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,GAAG,EAAEH;AAAtC,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI;AAAK,QAAA,SAAS,EAAC;AAAf,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC;AAAf,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAC;AAArB,SAAgCE,OAAhC,CADJ,EAEI,oBAAC,aAAD,QAAgBD,WAAhB,CAFJ,CALJ,CADJ,EAWI;AAAK,QAAA,SAAS,EAAC;AAAf,SAAyBL,CAAC,CAAC,SAAD,CAA1B,CAXJ,CADJ;AAgBH,KAlBD,CADJ;AAqBH,GAtBD;;AAuBA,SACI,oBAAC,mBAAD,QACKC,IAAI,EADT,EAEI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,CAAC,CAAC,SAAD,CAAlB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAA+C,IAAA,eAAe,EAAC,SAA/D;AAAyE,IAAA,IAAI,EAAC;AAA9E,IAFJ,CADJ;AAOH,CAjCD;;AAmCA,eAAeN,eAAe,CAAC,MAAD,CAAf,CAAwBI,cAAxB,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Link from \"next/link\";\n\nimport { CardExperienceStyle } from \"./CardExperienceStyle\";\n\nimport ParagraphBody from \"../../styles/fontsStyles/paragraphBody\";\n\nimport Button from \"../Button/Button\";\nimport cardExperience from \"../../content/card.json\";\n\nimport { i18n, withTranslation } from '../../i18n'\n\n\n\nconst changeLanguage = (language, setLangauge) => {\n    i18n.changeLanguage(language)\n    setLangauge(language)\n}\nconst CardExperience = props => {\n    const { t } = props;\n    const [language, setLangauge] = useState(i18n.language)\n    const card = () => {\n        return (\n            cardExperience.map((member, i) => {\n                const { description, conutry, img } = member;\n                return (\n                    <div className=\"cardStyle\">\n                        <div className=\"card-experience\" key={i}>\n                            <div className=\"img\">\n                                <div className=\"imgFondo\"></div>\n                                <div className=\"imgPeople\"></div>\n                            </div>\n                            <div className=\"text\">\n                                <ParagraphBody color=\"#999999\">{conutry}</ParagraphBody>\n                                <ParagraphBody>{description}</ParagraphBody>\n                            </div>\n                        </div>\n                        <div className=\"button\">{t(\"button1\")}</div>\n                        \n                    </div>\n                )\n            })\n        )\n    }\n    return (\n        <CardExperienceStyle>\n            {card()}\n            <Button content={t(\"button1\")} color=\"#F1A409\" backgroundColor=\"#FCEDCE\" size=\"14px\" />\n\n        </CardExperienceStyle>\n    );\n};\n\nexport default withTranslation(\"home\")(CardExperience);\n"]},"metadata":{},"sourceType":"module"}